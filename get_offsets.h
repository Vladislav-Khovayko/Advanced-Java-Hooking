#ifndef CALC_OFFSETS_H
#define CALC_OFFSETS_H

#include <string>
#include <unordered_map>

#include "libs/jni/jni.h"

//This code uses exports provided by the JVM to calculate field offsets of structures,
//allowing to avoid hardcoding offsets, improving portability.
//Not all fields get exported, JavaThread's JNIEnv also Adapter's c2i and i2c arent exported on Java 8 51, probably other versions too

//structs taken from https://github.com/openjdk/jdk/blob/master/src/hotspot/share/runtime/vmStructs.hpp

/*
 * Portions of this file are from Oracle's code, their license:
 *
 * Copyright (c) 2000, 2025, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 *
 */

typedef struct {
    const char* typeName;            // The type name containing the given field (example: "Klass")
    const char* fieldName;           // The field name within the type           (example: "_name")
    const char* typeString;          // Quoted name of the type of this field (example: "Symbol*";
                                    // parsed in Java to ensure type correctness
    int32_t  isStatic;               // Indicates whether following field is an offset or an address
    uint64_t offset;                 // Offset of field within structure; only used for nonstatic fields
    uint64_t address;                   // Address of field; only used for static fields
                                   // ("offset" can not be reused because of apparent SparcWorks compiler bug
                                   // in generation of initializer data)
}   VMStructEntry;

typedef struct { //not really needed
  const char* typeName;            // Type name (example: "Method")
  const char* superclassName;      // Superclass name, or null if none (example: "oopDesc")
  int32_t isOopType;               // Does this type represent an oop typedef? (i.e., "Method*" or
                                   // "Klass*", but NOT "Method")
  int32_t isIntegerType;           // Does this type represent an integer type (of arbitrary size)?
  int32_t isUnsigned;              // If so, is it unsigned?
  uint64_t size;                   // Size, in bytes, of the type
} VMTypeEntry;

//get pointers to these structure arrays, exported by the jvm in https://github.com/openjdk/jdk/blob/master/src/hotspot/share/runtime/vmStructs.cpp
extern "C" JNIIMPORT VMStructEntry* gHotSpotVMStructs;
extern "C" JNIIMPORT VMTypeEntry* gHotSpotVMTypes; //not really needed




/*
 * Copyright (C) 2025 Vladislav Khovayko
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

std::unordered_map<std::string, std::unordered_map<std::string, VMStructEntry*>> struct_entries;// name of struct, list(name of field, field ptr)
std::unordered_map<std::string, VMTypeEntry*> type_entries; //name of struct, ptr to struct

bool init_offsets_flag = false;
void init_offsets(){
    init_offsets_flag = true;
    //"The last entry is identified over in the serviceability agent by the fact that it has a NULL typeName"
    for (int i = 0; gHotSpotVMTypes[i].typeName != NULL; i++){ 
        VMTypeEntry* t = &gHotSpotVMTypes[i]; //list of types of structs, like Method, Klass, ...
        type_entries[t->typeName] = t;
    }

    for (int i = 0; gHotSpotVMStructs[i].fieldName != NULL; i++){ 
      VMStructEntry* s = &gHotSpotVMStructs[i]; //fields withing structs, like _i2i_entry and the struct that holds it
      struct_entries[s->typeName][s->fieldName] = s;
    }
}


VMTypeEntry* get_struct(const char* struct_name){
    for(const std::pair<std::string, VMTypeEntry*> &s : type_entries){
        if (s.first == struct_name)
            return s.second;
    }
    printf("struct not found\n");
    return NULL;
}
std::unordered_map<std::string, VMStructEntry*> get_fields_of_struct(const char* struct_name){
    for(const std::pair<std::string, std::unordered_map<std::string, VMStructEntry*>> &f : struct_entries){
        if (f.first == struct_name)
            return f.second;
    }
    printf("Error: struct not found\n");
    std::unordered_map<std::string, VMStructEntry*> s;//return an empty map as error
    return s;
}

void print_fields(const char* struct_name){
    if(!init_offsets_flag){
        init_offsets();
    }
    std::unordered_map<std::string, VMStructEntry*> fields = get_fields_of_struct(struct_name);
    if (fields.size() == 0){
        printf("Error: fields of type '%s' not found\n", struct_name);
    }else{
        for(const std::pair<std::string, VMStructEntry*> f : fields){
            printf("%s.%s\n", struct_name, f.first.c_str());
        }
    }
}

uint64_t get_offset(const char* struct_name, const char* field_name){//give -1 if not found, also print an error
    if(!init_offsets_flag){
        init_offsets();
    }
    
    VMTypeEntry* type = get_struct(struct_name);
    if (type == NULL){
        printf("Error: JVM struct '%s' not found\n", struct_name);
        return -1;
    }

    std::unordered_map<std::string, VMStructEntry*> fields = get_fields_of_struct(struct_name);
    if (fields.size() == 0){
        printf("Error: fields of type '%s' not found\n", struct_name);
        return -1;
    }
    
    bool found = false;
    std::pair<std::string, VMStructEntry*> entry;
    for(std::pair<std::string, VMStructEntry*> f : fields){
        if(f.first == field_name){//found
            entry = f;
            found = true;
            break;
        }
    }
    if(!found){
        printf("Error: cant find field '%s'\n", field_name);
        return -1;
    }
    
    if (entry.second->isStatic){
        return entry.second->address;
    }else{
        return entry.second->offset;
    }
}


unsigned char* get_field(unsigned char* pointer, const char* struct_name, const char* field_name){//give -1 if not found, also print an error
    int offset = get_offset(struct_name, field_name);
    if(offset != -1){//everything is fine
        return *(unsigned char**)(pointer + offset);
    }else{//failed to get offset
        return 0;
    }
}

void set_field(unsigned char* pointer, const char* struct_name, const char* field_name, uint64_t value){//give -1 if not found, also print an error
    int offset = get_offset(struct_name, field_name);
    if(offset != -1){
        *(void**)(pointer + offset) = (void*)value;
    }else{
        //failed to get offset
        return;
    }
}


//dosnt free memory yet
//todo: require to not need adapter offset, can easily be done by looping through potential adapter positions excluding comp_entry
int calc_c2i_offset(JNIEnv *env){

    jclass cls = env->FindClass("myDefinedClass");

    if(cls == NULL){
        // https://cpp.hotexamples.com/examples/-/JNIEnv/CallStaticObjectMethod/cpp-jnienv-callstaticobjectmethod-method-examples.html
        jclass class_loader = env->FindClass("java/lang/ClassLoader");

        if(class_loader == NULL){
            printf("Error: failed to get class loader class\n");
            return -2;
        }

        jmethodID get_system_loader = env->GetStaticMethodID(class_loader, "getSystemClassLoader", "()Ljava/lang/ClassLoader;");
        if(get_system_loader == NULL){
            printf("Error: failed to get class loader method\n");
            return -2;
        }

        jobject class_loader_obj = env->CallStaticObjectMethod(class_loader, get_system_loader);

        const unsigned char myDefinedClass[] = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x34, 0x00, 0xfd, 0x0a, 0x00, 0x0d, 0x00, 0xf0, 0x0a, 
  0x00, 0x0c, 0x00, 0xf1, 0x0a, 0x00, 0x0c, 0x00, 0xf2, 0x0a, 0x00, 0x0c, 0x00, 0xf3, 0x0a, 0x00, 
  0x0c, 0x00, 0xf4, 0x0a, 0x00, 0x0c, 0x00, 0xf5, 0x0a, 0x00, 0x0c, 0x00, 0xf6, 0x0a, 0x00, 0x0c, 
  0x00, 0xf7, 0x0a, 0x00, 0x0c, 0x00, 0xf8, 0x0a, 0x00, 0x0c, 0x00, 0xf9, 0x0a, 0x00, 0x0c, 0x00, 
  0xfa, 0x07, 0x00, 0xfb, 0x07, 0x00, 0xfc, 0x01, 0x00, 0x06, 0x3c, 0x69, 0x6e, 0x69, 0x74, 0x3e, 
  0x01, 0x00, 0x03, 0x28, 0x29, 0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x01, 0x00, 0x0f, 
  0x4c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x01, 
  0x00, 0x0a, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x01, 0x00, 0x10, 0x6e, 
  0x61, 0x74, 0x69, 0x76, 0x65, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x56, 0x6f, 0x69, 0x64, 0x01, 
  0x00, 0x10, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x42, 0x6f, 
  0x6f, 0x6c, 0x01, 0x00, 0x03, 0x28, 0x29, 0x5a, 0x01, 0x00, 0x10, 0x6e, 0x61, 0x74, 0x69, 0x76, 
  0x65, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x42, 0x79, 0x74, 0x65, 0x01, 0x00, 0x03, 0x28, 0x29, 
  0x42, 0x01, 0x00, 0x10, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 
  0x43, 0x68, 0x61, 0x72, 0x01, 0x00, 0x03, 0x28, 0x29, 0x43, 0x01, 0x00, 0x11, 0x6e, 0x61, 0x74, 
  0x69, 0x76, 0x65, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x01, 0x00, 
  0x03, 0x28, 0x29, 0x53, 0x01, 0x00, 0x0f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x42, 0x72, 0x69, 
  0x64, 0x67, 0x65, 0x49, 0x6e, 0x74, 0x01, 0x00, 0x03, 0x28, 0x29, 0x49, 0x01, 0x00, 0x10, 0x6e, 
  0x61, 0x74, 0x69, 0x76, 0x65, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x4c, 0x6f, 0x6e, 0x67, 0x01, 
  0x00, 0x03, 0x28, 0x29, 0x4a, 0x01, 0x00, 0x11, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x42, 0x72, 
  0x69, 0x64, 0x67, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x01, 0x00, 0x03, 0x28, 0x29, 0x46, 0x01, 
  0x00, 0x12, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x44, 0x6f, 
  0x75, 0x62, 0x6c, 0x65, 0x01, 0x00, 0x03, 0x28, 0x29, 0x44, 0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 
  0x69, 0x76, 0x65, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x01, 
  0x00, 0x14, 0x28, 0x29, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x4f, 
  0x62, 0x6a, 0x65, 0x63, 0x74, 0x3b, 0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 
  0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x56, 0x6f, 0x69, 0x64, 0x31, 0x01, 0x00, 0x07, 0x28, 0x49, 
  0x49, 0x46, 0x43, 0x29, 0x56, 0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 
  0x61, 0x70, 0x70, 0x65, 0x72, 0x56, 0x6f, 0x69, 0x64, 0x32, 0x01, 0x00, 0x07, 0x28, 0x49, 0x49, 
  0x43, 0x46, 0x29, 0x56, 0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 
  0x70, 0x70, 0x65, 0x72, 0x56, 0x6f, 0x69, 0x64, 0x33, 0x01, 0x00, 0x07, 0x28, 0x49, 0x46, 0x49, 
  0x43, 0x29, 0x56, 0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 
  0x70, 0x65, 0x72, 0x56, 0x6f, 0x69, 0x64, 0x34, 0x01, 0x00, 0x07, 0x28, 0x49, 0x46, 0x43, 0x49, 
  0x29, 0x56, 0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 
  0x65, 0x72, 0x56, 0x6f, 0x69, 0x64, 0x35, 0x01, 0x00, 0x07, 0x28, 0x49, 0x43, 0x49, 0x46, 0x29, 
  0x56, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 
  0x72, 0x56, 0x6f, 0x69, 0x64, 0x31, 0x53, 0x01, 0x00, 0x07, 0x28, 0x49, 0x43, 0x46, 0x49, 0x29, 
  0x56, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 
  0x72, 0x56, 0x6f, 0x69, 0x64, 0x32, 0x53, 0x01, 0x00, 0x07, 0x28, 0x46, 0x49, 0x49, 0x43, 0x29, 
  0x56, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 
  0x72, 0x56, 0x6f, 0x69, 0x64, 0x33, 0x53, 0x01, 0x00, 0x07, 0x28, 0x46, 0x49, 0x43, 0x49, 0x29, 
  0x56, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 
  0x72, 0x56, 0x6f, 0x69, 0x64, 0x34, 0x53, 0x01, 0x00, 0x07, 0x28, 0x46, 0x43, 0x49, 0x49, 0x29, 
  0x56, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 
  0x72, 0x56, 0x6f, 0x69, 0x64, 0x35, 0x53, 0x01, 0x00, 0x07, 0x28, 0x43, 0x49, 0x49, 0x46, 0x29, 
  0x56, 0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 
  0x72, 0x42, 0x6f, 0x6f, 0x6c, 0x31, 0x01, 0x00, 0x07, 0x28, 0x49, 0x49, 0x46, 0x43, 0x29, 0x5a, 
  0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 
  0x42, 0x6f, 0x6f, 0x6c, 0x32, 0x01, 0x00, 0x07, 0x28, 0x49, 0x49, 0x43, 0x46, 0x29, 0x5a, 0x01, 
  0x00, 0x12, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 
  0x6f, 0x6f, 0x6c, 0x33, 0x01, 0x00, 0x07, 0x28, 0x49, 0x46, 0x49, 0x43, 0x29, 0x5a, 0x01, 0x00, 
  0x12, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x6f, 
  0x6f, 0x6c, 0x34, 0x01, 0x00, 0x07, 0x28, 0x49, 0x46, 0x43, 0x49, 0x29, 0x5a, 0x01, 0x00, 0x12, 
  0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x6f, 0x6f, 
  0x6c, 0x35, 0x01, 0x00, 0x07, 0x28, 0x49, 0x43, 0x49, 0x46, 0x29, 0x5a, 0x01, 0x00, 0x13, 0x6e, 
  0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6c, 
  0x31, 0x53, 0x01, 0x00, 0x07, 0x28, 0x49, 0x43, 0x46, 0x49, 0x29, 0x5a, 0x01, 0x00, 0x13, 0x6e, 
  0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6c, 
  0x32, 0x53, 0x01, 0x00, 0x07, 0x28, 0x46, 0x49, 0x49, 0x43, 0x29, 0x5a, 0x01, 0x00, 0x13, 0x6e, 
  0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6c, 
  0x33, 0x53, 0x01, 0x00, 0x07, 0x28, 0x46, 0x49, 0x43, 0x49, 0x29, 0x5a, 0x01, 0x00, 0x13, 0x6e, 
  0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6c, 
  0x34, 0x53, 0x01, 0x00, 0x07, 0x28, 0x46, 0x43, 0x49, 0x49, 0x29, 0x5a, 0x01, 0x00, 0x13, 0x6e, 
  0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6c, 
  0x35, 0x53, 0x01, 0x00, 0x07, 0x28, 0x43, 0x49, 0x49, 0x46, 0x29, 0x5a, 0x01, 0x00, 0x12, 0x6e, 
  0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 
  0x31, 0x01, 0x00, 0x07, 0x28, 0x49, 0x49, 0x46, 0x43, 0x29, 0x42, 0x01, 0x00, 0x12, 0x6e, 0x61, 
  0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x32, 
  0x01, 0x00, 0x07, 0x28, 0x49, 0x49, 0x43, 0x46, 0x29, 0x42, 0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 
  0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x33, 0x01, 
  0x00, 0x07, 0x28, 0x49, 0x46, 0x49, 0x43, 0x29, 0x42, 0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 0x69, 
  0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x34, 0x01, 0x00, 
  0x07, 0x28, 0x49, 0x46, 0x43, 0x49, 0x29, 0x42, 0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 0x69, 0x76, 
  0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x35, 0x01, 0x00, 0x07, 
  0x28, 0x49, 0x43, 0x49, 0x46, 0x29, 0x42, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 
  0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x31, 0x53, 0x01, 0x00, 0x07, 
  0x28, 0x49, 0x43, 0x46, 0x49, 0x29, 0x42, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 
  0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x32, 0x53, 0x01, 0x00, 0x07, 
  0x28, 0x46, 0x49, 0x49, 0x43, 0x29, 0x42, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 
  0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x33, 0x53, 0x01, 0x00, 0x07, 
  0x28, 0x46, 0x49, 0x43, 0x49, 0x29, 0x42, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 
  0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x34, 0x53, 0x01, 0x00, 0x07, 
  0x28, 0x46, 0x43, 0x49, 0x49, 0x29, 0x42, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 
  0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x35, 0x53, 0x01, 0x00, 0x07, 
  0x28, 0x43, 0x49, 0x49, 0x46, 0x29, 0x42, 0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 
  0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x31, 0x01, 0x00, 0x07, 0x28, 
  0x49, 0x49, 0x46, 0x43, 0x29, 0x43, 0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 
  0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x32, 0x01, 0x00, 0x07, 0x28, 0x49, 
  0x49, 0x43, 0x46, 0x29, 0x43, 0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 
  0x61, 0x70, 0x70, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x33, 0x01, 0x00, 0x07, 0x28, 0x49, 0x46, 
  0x49, 0x43, 0x29, 0x43, 0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 
  0x70, 0x70, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x34, 0x01, 0x00, 0x07, 0x28, 0x49, 0x46, 0x43, 
  0x49, 0x29, 0x43, 0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 
  0x70, 0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x35, 0x01, 0x00, 0x07, 0x28, 0x49, 0x43, 0x49, 0x46, 
  0x29, 0x43, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 
  0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x31, 0x53, 0x01, 0x00, 0x07, 0x28, 0x49, 0x43, 0x46, 0x49, 
  0x29, 0x43, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 
  0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x32, 0x53, 0x01, 0x00, 0x07, 0x28, 0x46, 0x49, 0x49, 0x43, 
  0x29, 0x43, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 
  0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x33, 0x53, 0x01, 0x00, 0x07, 0x28, 0x46, 0x49, 0x43, 0x49, 
  0x29, 0x43, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 
  0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x34, 0x53, 0x01, 0x00, 0x07, 0x28, 0x46, 0x43, 0x49, 0x49, 
  0x29, 0x43, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 
  0x65, 0x72, 0x43, 0x68, 0x61, 0x72, 0x35, 0x53, 0x01, 0x00, 0x07, 0x28, 0x43, 0x49, 0x49, 0x46, 
  0x29, 0x43, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 
  0x65, 0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x31, 0x01, 0x00, 0x07, 0x28, 0x49, 0x49, 0x46, 0x43, 
  0x29, 0x53, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 
  0x65, 0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x32, 0x01, 0x00, 0x07, 0x28, 0x49, 0x49, 0x43, 0x46, 
  0x29, 0x53, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 
  0x65, 0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x33, 0x01, 0x00, 0x07, 0x28, 0x49, 0x46, 0x49, 0x43, 
  0x29, 0x53, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 
  0x65, 0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x34, 0x01, 0x00, 0x07, 0x28, 0x49, 0x46, 0x43, 0x49, 
  0x29, 0x53, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 
  0x65, 0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x35, 0x01, 0x00, 0x07, 0x28, 0x49, 0x43, 0x49, 0x46, 
  0x29, 0x53, 0x01, 0x00, 0x14, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 
  0x65, 0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x31, 0x53, 0x01, 0x00, 0x07, 0x28, 0x49, 0x43, 0x46, 
  0x49, 0x29, 0x53, 0x01, 0x00, 0x14, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 
  0x70, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x32, 0x53, 0x01, 0x00, 0x07, 0x28, 0x46, 0x49, 
  0x49, 0x43, 0x29, 0x53, 0x01, 0x00, 0x14, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 
  0x70, 0x70, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x33, 0x53, 0x01, 0x00, 0x07, 0x28, 0x46, 
  0x49, 0x43, 0x49, 0x29, 0x53, 0x01, 0x00, 0x14, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 
  0x61, 0x70, 0x70, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x34, 0x53, 0x01, 0x00, 0x07, 0x28, 
  0x46, 0x43, 0x49, 0x49, 0x29, 0x53, 0x01, 0x00, 0x14, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 
  0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x35, 0x53, 0x01, 0x00, 0x07, 
  0x28, 0x43, 0x49, 0x49, 0x46, 0x29, 0x53, 0x01, 0x00, 0x11, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 
  0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x31, 0x01, 0x00, 0x07, 0x28, 0x49, 
  0x49, 0x46, 0x43, 0x29, 0x49, 0x01, 0x00, 0x11, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 
  0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x32, 0x01, 0x00, 0x07, 0x28, 0x49, 0x49, 0x43, 
  0x46, 0x29, 0x49, 0x01, 0x00, 0x11, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 
  0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x33, 0x01, 0x00, 0x07, 0x28, 0x49, 0x46, 0x49, 0x43, 0x29, 
  0x49, 0x01, 0x00, 0x11, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 
  0x72, 0x49, 0x6e, 0x74, 0x34, 0x01, 0x00, 0x07, 0x28, 0x49, 0x46, 0x43, 0x49, 0x29, 0x49, 0x01, 
  0x00, 0x11, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 
  0x6e, 0x74, 0x35, 0x01, 0x00, 0x07, 0x28, 0x49, 0x43, 0x49, 0x46, 0x29, 0x49, 0x01, 0x00, 0x12, 
  0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 
  0x31, 0x53, 0x01, 0x00, 0x07, 0x28, 0x49, 0x43, 0x46, 0x49, 0x29, 0x49, 0x01, 0x00, 0x12, 0x6e, 
  0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x32, 
  0x53, 0x01, 0x00, 0x07, 0x28, 0x46, 0x49, 0x49, 0x43, 0x29, 0x49, 0x01, 0x00, 0x12, 0x6e, 0x61, 
  0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x33, 0x53, 
  0x01, 0x00, 0x07, 0x28, 0x46, 0x49, 0x43, 0x49, 0x29, 0x49, 0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 
  0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x34, 0x53, 0x01, 
  0x00, 0x07, 0x28, 0x46, 0x43, 0x49, 0x49, 0x29, 0x49, 0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 0x69, 
  0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x35, 0x53, 0x01, 0x00, 
  0x07, 0x28, 0x43, 0x49, 0x49, 0x46, 0x29, 0x49, 0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 0x69, 0x76, 
  0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x6e, 0x67, 0x31, 0x01, 0x00, 0x07, 
  0x28, 0x49, 0x49, 0x46, 0x43, 0x29, 0x4a, 0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 
  0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x6e, 0x67, 0x32, 0x01, 0x00, 0x07, 0x28, 
  0x49, 0x49, 0x43, 0x46, 0x29, 0x4a, 0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 
  0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x6e, 0x67, 0x33, 0x01, 0x00, 0x07, 0x28, 0x49, 
  0x46, 0x49, 0x43, 0x29, 0x4a, 0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 
  0x61, 0x70, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x6e, 0x67, 0x34, 0x01, 0x00, 0x07, 0x28, 0x49, 0x46, 
  0x43, 0x49, 0x29, 0x4a, 0x01, 0x00, 0x12, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 
  0x70, 0x70, 0x65, 0x72, 0x4c, 0x6f, 0x6e, 0x67, 0x35, 0x01, 0x00, 0x07, 0x28, 0x49, 0x43, 0x49, 
  0x46, 0x29, 0x4a, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 
  0x70, 0x65, 0x72, 0x4c, 0x6f, 0x6e, 0x67, 0x31, 0x53, 0x01, 0x00, 0x07, 0x28, 0x49, 0x43, 0x46, 
  0x49, 0x29, 0x4a, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 
  0x70, 0x65, 0x72, 0x4c, 0x6f, 0x6e, 0x67, 0x32, 0x53, 0x01, 0x00, 0x07, 0x28, 0x46, 0x49, 0x49, 
  0x43, 0x29, 0x4a, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 
  0x70, 0x65, 0x72, 0x4c, 0x6f, 0x6e, 0x67, 0x33, 0x53, 0x01, 0x00, 0x07, 0x28, 0x46, 0x49, 0x43, 
  0x49, 0x29, 0x4a, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 
  0x70, 0x65, 0x72, 0x4c, 0x6f, 0x6e, 0x67, 0x34, 0x53, 0x01, 0x00, 0x07, 0x28, 0x46, 0x43, 0x49, 
  0x49, 0x29, 0x4a, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 
  0x70, 0x65, 0x72, 0x4c, 0x6f, 0x6e, 0x67, 0x35, 0x53, 0x01, 0x00, 0x07, 0x28, 0x43, 0x49, 0x49, 
  0x46, 0x29, 0x4a, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 
  0x70, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x31, 0x01, 0x00, 0x07, 0x28, 0x49, 0x49, 0x46, 
  0x43, 0x29, 0x46, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 
  0x70, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x01, 0x00, 0x07, 0x28, 0x49, 0x49, 0x43, 
  0x46, 0x29, 0x46, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 
  0x70, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x01, 0x00, 0x07, 0x28, 0x49, 0x46, 0x49, 
  0x43, 0x29, 0x46, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 
  0x70, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x01, 0x00, 0x07, 0x28, 0x49, 0x46, 0x43, 
  0x49, 0x29, 0x46, 0x01, 0x00, 0x13, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 
  0x70, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x35, 0x01, 0x00, 0x07, 0x28, 0x49, 0x43, 0x49, 
  0x46, 0x29, 0x46, 0x01, 0x00, 0x14, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 
  0x70, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x31, 0x53, 0x01, 0x00, 0x07, 0x28, 0x49, 0x43, 
  0x46, 0x49, 0x29, 0x46, 0x01, 0x00, 0x14, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 
  0x70, 0x70, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x32, 0x53, 0x01, 0x00, 0x07, 0x28, 0x46, 
  0x49, 0x49, 0x43, 0x29, 0x46, 0x01, 0x00, 0x14, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 
  0x61, 0x70, 0x70, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x53, 0x01, 0x00, 0x07, 0x28, 
  0x46, 0x49, 0x43, 0x49, 0x29, 0x46, 0x01, 0x00, 0x14, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 
  0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x34, 0x53, 0x01, 0x00, 0x07, 
  0x28, 0x46, 0x43, 0x49, 0x49, 0x29, 0x46, 0x01, 0x00, 0x14, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 
  0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x35, 0x53, 0x01, 0x00, 
  0x07, 0x28, 0x43, 0x49, 0x49, 0x46, 0x29, 0x46, 0x01, 0x00, 0x14, 0x6e, 0x61, 0x74, 0x69, 0x76, 
  0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x31, 0x01, 
  0x00, 0x07, 0x28, 0x49, 0x49, 0x46, 0x43, 0x29, 0x44, 0x01, 0x00, 0x14, 0x6e, 0x61, 0x74, 0x69, 
  0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x32, 
  0x01, 0x00, 0x07, 0x28, 0x49, 0x49, 0x43, 0x46, 0x29, 0x44, 0x01, 0x00, 0x14, 0x6e, 0x61, 0x74, 
  0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 
  0x33, 0x01, 0x00, 0x07, 0x28, 0x49, 0x46, 0x49, 0x43, 0x29, 0x44, 0x01, 0x00, 0x14, 0x6e, 0x61, 
  0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x44, 0x6f, 0x75, 0x62, 0x6c, 
  0x65, 0x34, 0x01, 0x00, 0x07, 0x28, 0x49, 0x46, 0x43, 0x49, 0x29, 0x44, 0x01, 0x00, 0x14, 0x6e, 
  0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x44, 0x6f, 0x75, 0x62, 
  0x6c, 0x65, 0x35, 0x01, 0x00, 0x07, 0x28, 0x49, 0x43, 0x49, 0x46, 0x29, 0x44, 0x01, 0x00, 0x15, 
  0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x44, 0x6f, 0x75, 
  0x62, 0x6c, 0x65, 0x31, 0x53, 0x01, 0x00, 0x07, 0x28, 0x49, 0x43, 0x46, 0x49, 0x29, 0x44, 0x01, 
  0x00, 0x15, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x44, 
  0x6f, 0x75, 0x62, 0x6c, 0x65, 0x32, 0x53, 0x01, 0x00, 0x07, 0x28, 0x46, 0x49, 0x49, 0x43, 0x29, 
  0x44, 0x01, 0x00, 0x15, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 
  0x72, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x33, 0x53, 0x01, 0x00, 0x07, 0x28, 0x46, 0x49, 0x43, 
  0x49, 0x29, 0x44, 0x01, 0x00, 0x15, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 
  0x70, 0x65, 0x72, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x34, 0x53, 0x01, 0x00, 0x07, 0x28, 0x46, 
  0x43, 0x49, 0x49, 0x29, 0x44, 0x01, 0x00, 0x15, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 
  0x61, 0x70, 0x70, 0x65, 0x72, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x35, 0x53, 0x01, 0x00, 0x07, 
  0x28, 0x43, 0x49, 0x49, 0x46, 0x29, 0x44, 0x01, 0x00, 0x14, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 
  0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x31, 0x01, 0x00, 
  0x18, 0x28, 0x49, 0x49, 0x46, 0x43, 0x29, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 
  0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x3b, 0x01, 0x00, 0x14, 0x6e, 0x61, 0x74, 0x69, 
  0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x32, 
  0x01, 0x00, 0x18, 0x28, 0x49, 0x49, 0x43, 0x46, 0x29, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 
  0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x3b, 0x01, 0x00, 0x14, 0x6e, 0x61, 
  0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 
  0x74, 0x33, 0x01, 0x00, 0x18, 0x28, 0x49, 0x46, 0x49, 0x43, 0x29, 0x4c, 0x6a, 0x61, 0x76, 0x61, 
  0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x3b, 0x01, 0x00, 0x14, 
  0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x4f, 0x62, 0x6a, 
  0x65, 0x63, 0x74, 0x34, 0x01, 0x00, 0x18, 0x28, 0x49, 0x46, 0x43, 0x49, 0x29, 0x4c, 0x6a, 0x61, 
  0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x3b, 0x01, 
  0x00, 0x14, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x4f, 
  0x62, 0x6a, 0x65, 0x63, 0x74, 0x35, 0x01, 0x00, 0x18, 0x28, 0x49, 0x43, 0x49, 0x46, 0x29, 0x4c, 
  0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 
  0x3b, 0x01, 0x00, 0x15, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 
  0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x31, 0x53, 0x01, 0x00, 0x18, 0x28, 0x49, 0x43, 0x46, 
  0x49, 0x29, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 
  0x65, 0x63, 0x74, 0x3b, 0x01, 0x00, 0x15, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 
  0x70, 0x70, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x32, 0x53, 0x01, 0x00, 0x18, 0x28, 
  0x46, 0x49, 0x49, 0x43, 0x29, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 
  0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x3b, 0x01, 0x00, 0x15, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 
  0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x33, 0x53, 0x01, 
  0x00, 0x18, 0x28, 0x46, 0x49, 0x43, 0x49, 0x29, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 
  0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x3b, 0x01, 0x00, 0x15, 0x6e, 0x61, 0x74, 
  0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 
  0x34, 0x53, 0x01, 0x00, 0x18, 0x28, 0x46, 0x43, 0x49, 0x49, 0x29, 0x4c, 0x6a, 0x61, 0x76, 0x61, 
  0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x3b, 0x01, 0x00, 0x15, 
  0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x4f, 0x62, 0x6a, 
  0x65, 0x63, 0x74, 0x35, 0x53, 0x01, 0x00, 0x18, 0x28, 0x43, 0x49, 0x49, 0x46, 0x29, 0x4c, 0x6a, 
  0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x3b, 
  0x01, 0x00, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x01, 0x00, 0x0a, 
  0x74, 0x65, 0x73, 0x74, 0x32, 0x2e, 0x6a, 0x61, 0x76, 0x61, 0x0c, 0x00, 0x0e, 0x00, 0x0f, 0x0c, 
  0x00, 0x13, 0x00, 0x0f, 0x0c, 0x00, 0x14, 0x00, 0x15, 0x0c, 0x00, 0x16, 0x00, 0x17, 0x0c, 0x00, 
  0x18, 0x00, 0x19, 0x0c, 0x00, 0x1a, 0x00, 0x1b, 0x0c, 0x00, 0x1c, 0x00, 0x1d, 0x0c, 0x00, 0x1e, 
  0x00, 0x1f, 0x0c, 0x00, 0x20, 0x00, 0x21, 0x0c, 0x00, 0x22, 0x00, 0x23, 0x0c, 0x00, 0x24, 0x00, 
  0x25, 0x01, 0x00, 0x0e, 0x6d, 0x79, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x43, 0x6c, 0x61, 
  0x73, 0x73, 0x01, 0x00, 0x10, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x4f, 
  0x62, 0x6a, 0x65, 0x63, 0x74, 0x00, 0x20, 0x00, 0x0c, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x70, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x0f, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1d, 0x00, 
  0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x2a, 0xb7, 0x00, 0x01, 0xb1, 0x00, 0x00, 0x00, 0x01, 
  0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x09, 0x00, 0x12, 
  0x00, 0x0f, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x01, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 
  0x00, 0x00, 0x05, 0x01, 0x09, 0x00, 0x13, 0x00, 0x0f, 0x00, 0x00, 0x01, 0x09, 0x00, 0x14, 0x00, 
  0x15, 0x00, 0x00, 0x01, 0x09, 0x00, 0x16, 0x00, 0x17, 0x00, 0x00, 0x01, 0x09, 0x00, 0x18, 0x00, 
  0x19, 0x00, 0x00, 0x01, 0x09, 0x00, 0x1a, 0x00, 0x1b, 0x00, 0x00, 0x01, 0x09, 0x00, 0x1c, 0x00, 
  0x1d, 0x00, 0x00, 0x01, 0x09, 0x00, 0x1e, 0x00, 0x1f, 0x00, 0x00, 0x01, 0x09, 0x00, 0x20, 0x00, 
  0x21, 0x00, 0x00, 0x01, 0x09, 0x00, 0x22, 0x00, 0x23, 0x00, 0x00, 0x01, 0x09, 0x00, 0x24, 0x00, 
  0x25, 0x00, 0x00, 0x00, 0x01, 0x00, 0x26, 0x00, 0x27, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 
  0x20, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x02, 0xb1, 0x00, 0x00, 0x00, 
  0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x02, 0x00, 0x00, 0x00, 0x16, 0x00, 0x03, 0x00, 
  0x17, 0x00, 0x01, 0x00, 0x28, 0x00, 0x29, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 
  0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x02, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 
  0x11, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x02, 0x00, 0x00, 0x00, 0x19, 0x00, 0x03, 0x00, 0x1a, 0x00, 
  0x01, 0x00, 0x2a, 0x00, 0x2b, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 
  0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x02, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 
  0x00, 0x00, 0x0a, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x03, 0x00, 0x1d, 0x00, 0x01, 0x00, 
  0x2c, 0x00, 0x2d, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x05, 0x00, 
  0x00, 0x00, 0x04, 0xb8, 0x00, 0x02, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 
  0x0a, 0x00, 0x02, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x03, 0x00, 0x20, 0x00, 0x01, 0x00, 0x2e, 0x00, 
  0x2f, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 
  0x04, 0xb8, 0x00, 0x02, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x0a, 0x00, 
  0x02, 0x00, 0x00, 0x00, 0x22, 0x00, 0x03, 0x00, 0x23, 0x00, 0x09, 0x00, 0x30, 0x00, 0x31, 0x00, 
  0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 
  0x00, 0x02, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x02, 0x00, 
  0x00, 0x00, 0x26, 0x00, 0x03, 0x00, 0x27, 0x00, 0x09, 0x00, 0x32, 0x00, 0x33, 0x00, 0x01, 0x00, 
  0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x02, 
  0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x02, 0x00, 0x00, 0x00, 
  0x29, 0x00, 0x03, 0x00, 0x2a, 0x00, 0x09, 0x00, 0x34, 0x00, 0x35, 0x00, 0x01, 0x00, 0x10, 0x00, 
  0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x02, 0xb1, 0x00, 
  0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2c, 0x00, 
  0x03, 0x00, 0x2d, 0x00, 0x09, 0x00, 0x36, 0x00, 0x37, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 
  0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x02, 0xb1, 0x00, 0x00, 0x00, 
  0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x03, 0x00, 
  0x30, 0x00, 0x09, 0x00, 0x38, 0x00, 0x39, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 
  0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x02, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 
  0x11, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x02, 0x00, 0x00, 0x00, 0x32, 0x00, 0x03, 0x00, 0x33, 0x00, 
  0x01, 0x00, 0x3a, 0x00, 0x3b, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 
  0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x03, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 
  0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x01, 0x00, 0x3c, 0x00, 0x3d, 0x00, 
  0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 
  0x00, 0x03, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 
  0x00, 0x00, 0x3e, 0x00, 0x01, 0x00, 0x3e, 0x00, 0x3f, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 
  0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x03, 0xac, 0x00, 0x00, 0x00, 
  0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x41, 0x00, 0x01, 0x00, 
  0x40, 0x00, 0x41, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 
  0x00, 0x00, 0x04, 0xb8, 0x00, 0x03, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x44, 0x00, 0x01, 0x00, 0x42, 0x00, 0x43, 0x00, 0x01, 0x00, 
  0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x03, 
  0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 
  0x47, 0x00, 0x09, 0x00, 0x44, 0x00, 0x45, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 
  0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x03, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 
  0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4b, 0x00, 0x09, 0x00, 0x46, 0x00, 
  0x47, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 
  0x04, 0xb8, 0x00, 0x03, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 
  0x01, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x09, 0x00, 0x48, 0x00, 0x49, 0x00, 0x01, 0x00, 0x10, 0x00, 
  0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x03, 0xac, 0x00, 
  0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x51, 0x00, 
  0x09, 0x00, 0x4a, 0x00, 0x4b, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 
  0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x03, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 
  0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x54, 0x00, 0x09, 0x00, 0x4c, 0x00, 0x4d, 0x00, 
  0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 
  0x00, 0x03, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 
  0x00, 0x00, 0x57, 0x00, 0x01, 0x00, 0x4e, 0x00, 0x4f, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 
  0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x04, 0xac, 0x00, 0x00, 0x00, 
  0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x5d, 0x00, 0x01, 0x00, 
  0x50, 0x00, 0x51, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 
  0x00, 0x00, 0x04, 0xb8, 0x00, 0x04, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x60, 0x00, 0x01, 0x00, 0x52, 0x00, 0x53, 0x00, 0x01, 0x00, 
  0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x04, 
  0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 
  0x63, 0x00, 0x01, 0x00, 0x54, 0x00, 0x55, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 
  0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x04, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 
  0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x66, 0x00, 0x01, 0x00, 0x56, 0x00, 
  0x57, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 
  0x04, 0xb8, 0x00, 0x04, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 
  0x01, 0x00, 0x00, 0x00, 0x69, 0x00, 0x09, 0x00, 0x58, 0x00, 0x59, 0x00, 0x01, 0x00, 0x10, 0x00, 
  0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x04, 0xac, 0x00, 
  0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x6d, 0x00, 
  0x09, 0x00, 0x5a, 0x00, 0x5b, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 
  0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x04, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 
  0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x70, 0x00, 0x09, 0x00, 0x5c, 0x00, 0x5d, 0x00, 
  0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 
  0x00, 0x04, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 
  0x00, 0x00, 0x73, 0x00, 0x09, 0x00, 0x5e, 0x00, 0x5f, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 
  0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x04, 0xac, 0x00, 0x00, 0x00, 
  0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x76, 0x00, 0x09, 0x00, 
  0x60, 0x00, 0x61, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 
  0x00, 0x00, 0x04, 0xb8, 0x00, 0x04, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x79, 0x00, 0x01, 0x00, 0x62, 0x00, 0x63, 0x00, 0x01, 0x00, 
  0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x05, 
  0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 
  0x7f, 0x00, 0x01, 0x00, 0x64, 0x00, 0x65, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 
  0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x05, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 
  0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x82, 0x00, 0x01, 0x00, 0x66, 0x00, 
  0x67, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 
  0x04, 0xb8, 0x00, 0x05, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 
  0x01, 0x00, 0x00, 0x00, 0x85, 0x00, 0x01, 0x00, 0x68, 0x00, 0x69, 0x00, 0x01, 0x00, 0x10, 0x00, 
  0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x05, 0xac, 0x00, 
  0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x88, 0x00, 
  0x01, 0x00, 0x6a, 0x00, 0x6b, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 
  0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x05, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 
  0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x8b, 0x00, 0x09, 0x00, 0x6c, 0x00, 0x6d, 0x00, 
  0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 
  0x00, 0x05, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 
  0x00, 0x00, 0x8f, 0x00, 0x09, 0x00, 0x6e, 0x00, 0x6f, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 
  0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x05, 0xac, 0x00, 0x00, 0x00, 
  0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x92, 0x00, 0x09, 0x00, 
  0x70, 0x00, 0x71, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 
  0x00, 0x00, 0x04, 0xb8, 0x00, 0x05, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x95, 0x00, 0x09, 0x00, 0x72, 0x00, 0x73, 0x00, 0x01, 0x00, 
  0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x05, 
  0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 
  0x98, 0x00, 0x09, 0x00, 0x74, 0x00, 0x75, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 
  0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x05, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 
  0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x9b, 0x00, 0x01, 0x00, 0x76, 0x00, 
  0x77, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 
  0x04, 0xb8, 0x00, 0x06, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 
  0x01, 0x00, 0x00, 0x00, 0xa1, 0x00, 0x01, 0x00, 0x78, 0x00, 0x79, 0x00, 0x01, 0x00, 0x10, 0x00, 
  0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x06, 0xac, 0x00, 
  0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa4, 0x00, 
  0x01, 0x00, 0x7a, 0x00, 0x7b, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 
  0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x06, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 
  0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa7, 0x00, 0x01, 0x00, 0x7c, 0x00, 0x7d, 0x00, 
  0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 
  0x00, 0x06, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 
  0x00, 0x00, 0xaa, 0x00, 0x01, 0x00, 0x7e, 0x00, 0x7f, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 
  0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x06, 0xac, 0x00, 0x00, 0x00, 
  0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0xad, 0x00, 0x09, 0x00, 
  0x80, 0x00, 0x81, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 
  0x00, 0x00, 0x04, 0xb8, 0x00, 0x06, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb1, 0x00, 0x09, 0x00, 0x82, 0x00, 0x83, 0x00, 0x01, 0x00, 
  0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x06, 
  0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 
  0xb4, 0x00, 0x09, 0x00, 0x84, 0x00, 0x85, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 
  0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x06, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 
  0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb7, 0x00, 0x09, 0x00, 0x86, 0x00, 
  0x87, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 
  0x04, 0xb8, 0x00, 0x06, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 
  0x01, 0x00, 0x00, 0x00, 0xba, 0x00, 0x09, 0x00, 0x88, 0x00, 0x89, 0x00, 0x01, 0x00, 0x10, 0x00, 
  0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x06, 0xac, 0x00, 
  0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0xbd, 0x00, 
  0x01, 0x00, 0x8a, 0x00, 0x8b, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 
  0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x07, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 
  0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x01, 0x00, 0x8c, 0x00, 0x8d, 0x00, 
  0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 
  0x00, 0x07, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 
  0x00, 0x00, 0xc6, 0x00, 0x01, 0x00, 0x8e, 0x00, 0x8f, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 
  0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x07, 0xac, 0x00, 0x00, 0x00, 
  0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0xc9, 0x00, 0x01, 0x00, 
  0x90, 0x00, 0x91, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 
  0x00, 0x00, 0x04, 0xb8, 0x00, 0x07, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x01, 0x00, 0x92, 0x00, 0x93, 0x00, 0x01, 0x00, 
  0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x07, 
  0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 
  0xcf, 0x00, 0x09, 0x00, 0x94, 0x00, 0x95, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 
  0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x07, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 
  0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0xd3, 0x00, 0x09, 0x00, 0x96, 0x00, 
  0x97, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 
  0x04, 0xb8, 0x00, 0x07, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 
  0x01, 0x00, 0x00, 0x00, 0xd6, 0x00, 0x09, 0x00, 0x98, 0x00, 0x99, 0x00, 0x01, 0x00, 0x10, 0x00, 
  0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x07, 0xac, 0x00, 
  0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0xd9, 0x00, 
  0x09, 0x00, 0x9a, 0x00, 0x9b, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 
  0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x07, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 
  0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x09, 0x00, 0x9c, 0x00, 0x9d, 0x00, 
  0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 
  0x00, 0x07, 0xac, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 
  0x00, 0x00, 0xdf, 0x00, 0x01, 0x00, 0x9e, 0x00, 0x9f, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 
  0x1c, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x08, 0xad, 0x00, 0x00, 0x00, 
  0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0xe5, 0x00, 0x01, 0x00, 
  0xa0, 0x00, 0xa1, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x02, 0x00, 0x05, 0x00, 
  0x00, 0x00, 0x04, 0xb8, 0x00, 0x08, 0xad, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0xe8, 0x00, 0x01, 0x00, 0xa2, 0x00, 0xa3, 0x00, 0x01, 0x00, 
  0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x08, 
  0xad, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 
  0xeb, 0x00, 0x01, 0x00, 0xa4, 0x00, 0xa5, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 
  0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x08, 0xad, 0x00, 0x00, 0x00, 0x01, 0x00, 
  0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0xee, 0x00, 0x01, 0x00, 0xa6, 0x00, 
  0xa7, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 
  0x04, 0xb8, 0x00, 0x08, 0xad, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 
  0x01, 0x00, 0x00, 0x00, 0xf1, 0x00, 0x09, 0x00, 0xa8, 0x00, 0xa9, 0x00, 0x01, 0x00, 0x10, 0x00, 
  0x00, 0x00, 0x1c, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x08, 0xad, 0x00, 
  0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf5, 0x00, 
  0x09, 0x00, 0xaa, 0x00, 0xab, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x02, 0x00, 
  0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x08, 0xad, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 
  0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x09, 0x00, 0xac, 0x00, 0xad, 0x00, 
  0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 
  0x00, 0x08, 0xad, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 
  0x00, 0x00, 0xfb, 0x00, 0x09, 0x00, 0xae, 0x00, 0xaf, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 
  0x1c, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x08, 0xad, 0x00, 0x00, 0x00, 
  0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x09, 0x00, 
  0xb0, 0x00, 0xb1, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x02, 0x00, 0x04, 0x00, 
  0x00, 0x00, 0x04, 0xb8, 0x00, 0x08, 0xad, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x01, 0x00, 0xb2, 0x00, 0xb3, 0x00, 0x01, 0x00, 
  0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x09, 
  0xae, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 
  0x07, 0x00, 0x01, 0x00, 0xb4, 0x00, 0xb5, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 
  0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x09, 0xae, 0x00, 0x00, 0x00, 0x01, 0x00, 
  0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 0x0a, 0x00, 0x01, 0x00, 0xb6, 0x00, 
  0xb7, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 
  0x04, 0xb8, 0x00, 0x09, 0xae, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 
  0x01, 0x00, 0x00, 0x01, 0x0d, 0x00, 0x01, 0x00, 0xb8, 0x00, 0xb9, 0x00, 0x01, 0x00, 0x10, 0x00, 
  0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x09, 0xae, 0x00, 
  0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 0x10, 0x00, 
  0x01, 0x00, 0xba, 0x00, 0xbb, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 
  0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x09, 0xae, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 
  0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 0x13, 0x00, 0x09, 0x00, 0xbc, 0x00, 0xbd, 0x00, 
  0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 
  0x00, 0x09, 0xae, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 
  0x00, 0x01, 0x17, 0x00, 0x09, 0x00, 0xbe, 0x00, 0xbf, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 
  0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x09, 0xae, 0x00, 0x00, 0x00, 
  0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 0x1a, 0x00, 0x09, 0x00, 
  0xc0, 0x00, 0xc1, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 
  0x00, 0x00, 0x04, 0xb8, 0x00, 0x09, 0xae, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 0x1d, 0x00, 0x09, 0x00, 0xc2, 0x00, 0xc3, 0x00, 0x01, 0x00, 
  0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x09, 
  0xae, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 
  0x20, 0x00, 0x09, 0x00, 0xc4, 0x00, 0xc5, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 
  0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x09, 0xae, 0x00, 0x00, 0x00, 0x01, 0x00, 
  0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 0x23, 0x00, 0x01, 0x00, 0xc6, 0x00, 
  0xc7, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 
  0x04, 0xb8, 0x00, 0x0a, 0xaf, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 
  0x01, 0x00, 0x00, 0x01, 0x29, 0x00, 0x01, 0x00, 0xc8, 0x00, 0xc9, 0x00, 0x01, 0x00, 0x10, 0x00, 
  0x00, 0x00, 0x1c, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x0a, 0xaf, 0x00, 
  0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 0x2c, 0x00, 
  0x01, 0x00, 0xca, 0x00, 0xcb, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x02, 0x00, 
  0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x0a, 0xaf, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 
  0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 0x2f, 0x00, 0x01, 0x00, 0xcc, 0x00, 0xcd, 0x00, 
  0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 
  0x00, 0x0a, 0xaf, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 
  0x00, 0x01, 0x32, 0x00, 0x01, 0x00, 0xce, 0x00, 0xcf, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 
  0x1c, 0x00, 0x02, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x0a, 0xaf, 0x00, 0x00, 0x00, 
  0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 0x35, 0x00, 0x09, 0x00, 
  0xd0, 0x00, 0xd1, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x02, 0x00, 0x04, 0x00, 
  0x00, 0x00, 0x04, 0xb8, 0x00, 0x0a, 0xaf, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 0x39, 0x00, 0x09, 0x00, 0xd2, 0x00, 0xd3, 0x00, 0x01, 0x00, 
  0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x0a, 
  0xaf, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 
  0x3c, 0x00, 0x09, 0x00, 0xd4, 0x00, 0xd5, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 
  0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x0a, 0xaf, 0x00, 0x00, 0x00, 0x01, 0x00, 
  0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 0x3f, 0x00, 0x09, 0x00, 0xd6, 0x00, 
  0xd7, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 
  0x04, 0xb8, 0x00, 0x0a, 0xaf, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 
  0x01, 0x00, 0x00, 0x01, 0x42, 0x00, 0x09, 0x00, 0xd8, 0x00, 0xd9, 0x00, 0x01, 0x00, 0x10, 0x00, 
  0x00, 0x00, 0x1c, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x0a, 0xaf, 0x00, 
  0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 0x45, 0x00, 
  0x01, 0x00, 0xda, 0x00, 0xdb, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 
  0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x0b, 0xb0, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 
  0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 0x4b, 0x00, 0x01, 0x00, 0xdc, 0x00, 0xdd, 0x00, 
  0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 
  0x00, 0x0b, 0xb0, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 
  0x00, 0x01, 0x4e, 0x00, 0x01, 0x00, 0xde, 0x00, 0xdf, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 
  0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x0b, 0xb0, 0x00, 0x00, 0x00, 
  0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 0x51, 0x00, 0x01, 0x00, 
  0xe0, 0x00, 0xe1, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 
  0x00, 0x00, 0x04, 0xb8, 0x00, 0x0b, 0xb0, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 
  0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 0x54, 0x00, 0x01, 0x00, 0xe2, 0x00, 0xe3, 0x00, 0x01, 0x00, 
  0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x0b, 
  0xb0, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 
  0x57, 0x00, 0x09, 0x00, 0xe4, 0x00, 0xe5, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 
  0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x0b, 0xb0, 0x00, 0x00, 0x00, 0x01, 0x00, 
  0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 0x5b, 0x00, 0x09, 0x00, 0xe6, 0x00, 
  0xe7, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 
  0x04, 0xb8, 0x00, 0x0b, 0xb0, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 
  0x01, 0x00, 0x00, 0x01, 0x5e, 0x00, 0x09, 0x00, 0xe8, 0x00, 0xe9, 0x00, 0x01, 0x00, 0x10, 0x00, 
  0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x0b, 0xb0, 0x00, 
  0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 0x61, 0x00, 
  0x09, 0x00, 0xea, 0x00, 0xeb, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 
  0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 0x00, 0x0b, 0xb0, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 
  0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 0x64, 0x00, 0x09, 0x00, 0xec, 0x00, 0xed, 0x00, 
  0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0xb8, 
  0x00, 0x0b, 0xb0, 0x00, 0x00, 0x00, 0x01, 0x00, 0x11, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 
  0x00, 0x01, 0x67, 0x00, 0x01, 0x00, 0xee, 0x00, 0x00, 0x00, 0x02, 0x00, 0xef
        };

        cls = env->DefineClass("myDefinedClass", class_loader_obj, (jbyte*)myDefinedClass, sizeof(myDefinedClass));

        env->DeleteLocalRef(class_loader);
        env->DeleteLocalRef(class_loader_obj);
    }

    if(cls == NULL){
        //something went wrong
        printf("Error: failed to define class\n");
        return -2;
    }else{
        // printf("class defined\n");
        jmethodID test = env->GetStaticMethodID(cls, "dummy_func", "()V");
        env->DeleteLocalRef(cls);
        if(test == NULL){
            printf("failed to get method\n");
            return -2;
        }else{
            //calc c2i
            unsigned char* method_ptr = *(unsigned char**)test; //ptr math gets messed up with uintptr_t
            int comp_offset = get_offset("Method", "_from_compiled_entry");
            void* comp_entry = *(void**)(method_ptr + comp_offset);
            int adapter_offset = get_offset("Method", "_adapter");
            if(adapter_offset == -1){
                return -2;
            }
            void* adapter = *(void**)(method_ptr + adapter_offset);//adapter is null on java 17


            //scan adapter fields, find offset of c2i, works
            for(int i = 0; i < 200; i++){
                unsigned char* adapter_copy = (unsigned char*)adapter;
                adapter_copy += i;
                if(*(unsigned char**)adapter_copy == comp_entry){
                    printf("found c2i offset: %d\n", i);
                    return i;
                }
            }

            printf("Error: failed to find c2i offset\n");        
        }
    }
    return -2; //failed
}

//TODO:
//write a similar function for getting the _adapter offset, since jvm17 dosnt give it


//in the event that its common for jvms to not export fields like i2i and so on, maybe make getters for each field
//getter returns either jvm's offset or a hardcoded offset if that fails

// calcing i2i and interp_entry dynamically:
// they both have the same value, so scan a interpreted Method* for two matching values?
// if garbage data gets read during this scan, it might match itself and end up failing

//might be possible to get comp entry doing something like this too, this might be better than relying on jvm to export offsets

#endif